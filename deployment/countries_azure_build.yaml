# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)

variables:
  - name: 'artifactory.Repository'
    value: 'build-countries'
  - name: 'projectName'
    value: 'countries'
  - name: 'artifactName'
    value: 'countries'

resources:
  - repo: self

trigger:
  branches:
    include:
      - trunk
      - feature/*

jobs:
  - job: BuildJob
    displayName: 'Build'
    pool:
      name: Azure Pipelines
      demands:
        - java
    steps:
      - task: CmdLine@2
        displayName: 'Gradle Wrapper Generation'
        inputs:
          script: |
            gradle wrapper

      - task: Gradle@2
        displayName: 'Gradle build and test'
        inputs:
          workingDirectory: .
          gradleWrapperFile: gradlew
          tasks: 'clean build jacocoMergedReport'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          sonarQubeRunAnalysis: true
          sqGradlePluginVersionChoice: 'build'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage'
        inputs:
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacocoMergedReport/jacocoMergedReport.xml'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Acceptance Test Artifact'
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/deployment/acceptance-test'
          ArtifactName: '$(artifactName) - Acceptance Test'
          publishLocation: 'Container'
          condition: false

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/applications/app-service/build/libs/'
          ArtifactName: '$(artifactName)'
          publishLocation: 'Container'
          condition: false

